{"version":3,"sources":["components/TutorialMenu.js","components/AddButton.js","components/util.js","components/ArrayFieldTemplate.js","components/ObjectFieldTemplate.js","App.js","serviceWorker.js","index.js"],"names":["TutorialMenu","tutorial","contextRef","Sticky","className","offset","pushing","context","Menu","vertical","Item","Header","Sections","map","section","index","name","Name","href","Dialogs","dialog","defaultProps","AddButton","props","Button","icon","size","labelPosition","Icon","cleanClassNames","classNameArr","omit","classList","filter","Boolean","reduce","previous","current","concat","trim","split","Set","cn","includes","join","MaybeWrap","wrap","component","Component","children","isFixedItems","utils","ArrayFieldTitle","TitleField","idSchema","uiSchema","title","id","$id","options","ArrayFieldDescription","DescriptionField","description","gridStyle","display","gridTemplateColumns","isInitialArrayItem","target","conditions","DefaultArrayItem","key","wrapItem","Segment","Grid","style","horizontalButtons","alignItems","hasToolbar","Column","hasMoveUp","hasMoveDown","hasRemove","Group","tabIndex","disabled","readOnly","onClick","onReorderClick","onDropIndexClick","width","verticalAlign","DefaultFixedArrayFieldTemplate","canAdd","classNames","items","onAddClick","required","schema","itemProps","fieldTitle","fieldDescription","p","marginTop","position","textAlign","DefaultNormalArrayFieldTemplate","fieldChildren","ArrayFieldTemplate","formContext","Object","assign","semantic","getSemanticProps","ObjectFieldTemplate","properties","fieldName","prop","content","Fragment","length","App","useState","setSchema","setUISchema","tutorialData","setTutorialData","useEffect","fetch","process","then","res","json","data","useRef","Container","columns","Row","type","accept","onChange","files","file","reader","FileReader","onload","event","JSON","parse","result","readAsText","formData","onSubmit","dataStr","encodeURIComponent","stringify","download","document","createElement","setAttribute","body","appendChild","click","remove","ObjectTemplate","ArrayTemplate","$","Or","positive","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0f5b98be.chunk.js","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Menu, Sticky } from 'semantic-ui-react';\n\nconst TutorialMenu = ({ tutorial, contextRef }) => {\n  return (\n    <Sticky\n      className=\"tutorial-menu_wrapper\"\n      offset={100}\n      pushing={false}\n      context={contextRef}\n    >\n      <Menu vertical>\n        <Menu.Item>\n          <Menu.Header>Sections</Menu.Header>\n          <Menu.Menu>\n            {tutorial.Sections\n              ? tutorial.Sections.map((section, index) => (\n                  <Menu.Item\n                    name={section.Name}\n                    href={`#root_Sections_${index}_Name`}\n                  >\n                    {section.Name}\n                  </Menu.Item>\n                ))\n              : null}\n          </Menu.Menu>\n        </Menu.Item>\n        <Menu.Item>\n          <Menu.Header>Dialogs</Menu.Header>\n          <Menu.Menu>\n            {tutorial.Dialogs\n              ? tutorial.Dialogs.map((dialog, index) => (\n                  <Menu.Item\n                    name={dialog.Name}\n                    href={`#root_Dialogs_${index}_Name`}\n                  >\n                    {dialog.Name}\n                  </Menu.Item>\n                ))\n              : null}\n          </Menu.Menu>\n        </Menu.Item>\n      </Menu>\n    </Sticky>\n  );\n};\n\nTutorialMenu.defaultProps = {\n  tutorial: {},\n  contextRef: {},\n};\n\nTutorialMenu.propTypes = {\n  tutorial: PropTypes.objectOf(PropTypes.object),\n  contextRef: PropTypes.objectOf(PropTypes.object),\n};\n\nexport default TutorialMenu;\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\n\nfunction AddButton(props) {\n  return (\n    <Button {...props} icon size=\"tiny\" labelPosition=\"left\">\n      <Icon name=\"plus\" />\n      {props['title']}\n    </Button>\n  );\n}\n\nexport default AddButton;\n","import React from 'react';\n\n/**\n * Extract props meant for semantic UI components from props that are\n * passed to Widgets, Templates and Fields.\n * @param {Object} params\n * @param {Object} params.formContext\n * @param {Object} params.uiSchema\n * @param {Object} params.options\n * @returns {any}\n */\nexport function getSemanticProps({\n  formContext = {},\n  uiSchema = {},\n  options = {},\n}) {\n  return Object.assign(\n    {},\n    formContext.semantic || {},\n    uiSchema['ui:options'] ? uiSchema['ui:options'].semantic : {},\n    options.semantic || {},\n  );\n}\n\n/**\n * Combine multiple strings containing class names into a single string,\n * removing duplicates. E.g.\n * cleanClassNames('bar', 'baz bar', 'x y ', undefined)\n * // 'bar baz x y'\n * @param {Array} classNameArr\n * @param {Array} omit\n * @returns {string}\n */\nexport function cleanClassNames(classNameArr, omit = []) {\n  // Split each arg on whitespace, and add it to an array. Skip false-y args\n  // like \"\" and undefined.\n  const classList = classNameArr\n    .filter(Boolean)\n    .reduce(\n      (previous, current) => previous.concat(current.trim().split(/\\s+/)),\n      [],\n    );\n\n  // Remove any class names from omit, and make the rest unique before\n  // returning them as a string\n  return [...new Set(classList.filter((cn) => !omit.includes(cn)))].join(' ');\n}\n\n/**\n *\n * @param wrap\n * @param Component\n * @param props\n * @returns {*}\n * @constructor\n */\nexport function MaybeWrap({ wrap, component: Component = 'div', ...props }) {\n  return wrap ? <Component {...props} /> : props.children;\n}\n","/* eslint-disable react/prop-types,react/destructuring-assignment */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Grid, Segment } from 'semantic-ui-react';\nimport { utils } from '@rjsf/core';\nimport AddButton from './AddButton';\nimport { cleanClassNames, getSemanticProps, MaybeWrap } from './util';\n\nconst { isFixedItems } = utils;\n\nconst ArrayFieldTitle = ({ TitleField, idSchema, uiSchema, title }) => {\n  if (!title) {\n    return null;\n  }\n\n  const id = `${idSchema.$id}__title`;\n  return <TitleField id={id} title={title} options={uiSchema['ui:options']} />;\n};\n\nfunction ArrayFieldDescription({ DescriptionField, idSchema, description }) {\n  if (!description) {\n    // See #312: Ensure compatibility with old versions of React.\n    return null;\n  }\n  const id = `${idSchema.$id}__description`;\n  return <DescriptionField id={id} description={description} />;\n}\n\nconst gridStyle = (vertical) => ({\n  display: 'grid',\n  gridTemplateColumns: `${vertical ? 65 : 110}px 1fr `,\n});\n\n// checks if its the first array item\nfunction isInitialArrayItem(props) {\n  // no underscore because im not sure if we want to import a library here\n  const { idSchema } = props.children.props;\n  return idSchema.target && idSchema.conditions;\n}\n\n// Used in the two templates\nfunction DefaultArrayItem(props) {\n  return (\n    <div className=\"array-item\" key={props.key}>\n      <MaybeWrap wrap={props.wrapItem} component={Segment}>\n        <Grid\n          style={\n            !isInitialArrayItem(props)\n              ? { ...gridStyle(!props.horizontalButtons), alignItems: 'center' }\n              : gridStyle(!props.horizontalButtons)\n          }\n        >\n          {props.hasToolbar && (\n            <Grid.Column>\n              {(props.hasMoveUp || props.hasMoveDown || props.hasRemove) && (\n                <Button.Group size=\"mini\" vertical={!props.horizontalButtons}>\n                  {(props.hasMoveUp || props.hasMoveDown) && (\n                    <Button\n                      icon=\"angle up\"\n                      className=\"array-item-move-up\"\n                      tabIndex=\"-1\"\n                      disabled={\n                        props.disabled || props.readOnly || !props.hasMoveUp\n                      }\n                      onClick={props.onReorderClick(\n                        props.index,\n                        props.index - 1,\n                      )}\n                    />\n                  )}\n\n                  {(props.hasMoveUp || props.hasMoveDown) && (\n                    <Button\n                      icon=\"angle down\"\n                      className=\"array-item-move-down\"\n                      tabIndex=\"-1\"\n                      disabled={\n                        props.disabled || props.readOnly || !props.hasMoveDown\n                      }\n                      onClick={props.onReorderClick(\n                        props.index,\n                        props.index + 1,\n                      )}\n                    />\n                  )}\n\n                  {props.hasRemove && (\n                    <Button\n                      icon=\"trash\"\n                      className=\"array-item-remove\"\n                      tabIndex=\"-1\"\n                      disabled={props.disabled || props.readOnly}\n                      onClick={props.onDropIndexClick(props.index)}\n                    />\n                  )}\n                </Button.Group>\n              )}\n            </Grid.Column>\n          )}\n\n          <Grid.Column width={16} verticalAlign=\"middle\">\n            {props.children}\n          </Grid.Column>\n        </Grid>\n      </MaybeWrap>\n    </div>\n  );\n}\n\n// Used for arrays that are represented as multiple selection fields\n// (displayed as a multi select or checkboxes)\nfunction DefaultFixedArrayFieldTemplate({\n  uiSchema,\n  idSchema,\n  canAdd,\n  className,\n  classNames,\n  disabled,\n  items,\n  onAddClick,\n  readOnly,\n  required,\n  schema,\n  title,\n  TitleField,\n  itemProps,\n}) {\n  const fieldTitle = uiSchema['ui:title'] || title;\n  const fieldDescription = uiSchema['ui:description'] || schema.description;\n\n  return (\n    <div className={cleanClassNames([className, classNames])}>\n      <ArrayFieldTitle\n        key={`array-field-title-${idSchema.$id}`}\n        TitleField={TitleField}\n        idSchema={idSchema}\n        uiSchema={uiSchema}\n        title={fieldTitle}\n        required={required}\n      />\n\n      {fieldDescription && (\n        <div\n          className=\"field-description\"\n          key={`field-description-${idSchema.$id}`}\n        >\n          {fieldDescription}\n        </div>\n      )}\n\n      <div key={`array-item-list-${idSchema.$id}`}>\n        <div className=\"row array-item-list\">\n          {items && items.map((p) => DefaultArrayItem({ ...p, ...itemProps }))}\n        </div>\n\n        {canAdd && (\n          <div\n            style={{\n              marginTop: '1rem',\n              position: 'relative',\n              textAlign: 'right',\n            }}\n          >\n            <AddButton onClick={onAddClick} disabled={disabled || readOnly} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction DefaultNormalArrayFieldTemplate({\n  uiSchema,\n  idSchema,\n  canAdd,\n  className,\n  classNames,\n  disabled,\n  DescriptionField,\n  items,\n  onAddClick,\n  readOnly,\n  required,\n  schema,\n  title,\n  TitleField,\n  itemProps,\n}) {\n  const fieldTitle = uiSchema['ui:title'] || title;\n  const fieldDescription = uiSchema['ui:description'] || schema.description;\n  const fieldChildren = uiSchema['ui:children'] || 'Item';\n  return (\n    <div\n      className={cleanClassNames([\n        className,\n        classNames,\n        'sortable-form-fields',\n      ])}\n    >\n      {fieldDescription && (\n        <ArrayFieldDescription\n          key={`array-field-description-${idSchema.$id}`}\n          DescriptionField={DescriptionField}\n          idSchema={idSchema}\n          description={fieldDescription}\n        />\n      )}\n\n      <div key={`array-item-list-${idSchema.$id}`}>\n        <div className=\"row array-item-list\">\n          {items && items.map((p) => DefaultArrayItem({ ...p, ...itemProps }))}\n        </div>\n\n        {canAdd && (\n          <div\n            style={{\n              marginTop: '1rem',\n              position: 'relative',\n              textAlign: 'right',\n            }}\n          >\n            <AddButton\n              onClick={onAddClick}\n              disabled={disabled || readOnly}\n              title={`Add ${fieldChildren}`}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction ArrayFieldTemplate(props) {\n  const { schema } = props;\n  const { horizontalButtons, wrapItem } = getSemanticProps(props);\n  const itemProps = { horizontalButtons, wrapItem };\n\n  if (isFixedItems(schema)) {\n    return <DefaultFixedArrayFieldTemplate {...props} itemProps={itemProps} />;\n  }\n  return <DefaultNormalArrayFieldTemplate {...props} itemProps={itemProps} />;\n}\n\nArrayFieldTemplate.defaultProps = {\n  options: {},\n};\n\nArrayFieldTemplate.propTypes = {\n  options: PropTypes.object,\n};\n\nexport default ArrayFieldTemplate;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nfunction ObjectFieldTemplate({\n  DescriptionField,\n  description,\n  TitleField,\n  title,\n  properties,\n  required,\n  uiSchema,\n  idSchema,\n}) {\n  const fieldTitle = uiSchema['ui:title'] || title;\n  const fieldDescription = uiSchema['ui:description'] || description;\n  const fieldName = properties\n    .filter((prop) => prop.content.key === 'Name')\n    .map((prop) => prop.content.props.idSchema.$id);\n  return (\n    <React.Fragment>\n      {fieldName.length > 0 && <div id={fieldName[0]}></div>}\n      {fieldTitle && (\n        <TitleField\n          id={`${idSchema.$id}-title`}\n          title={fieldTitle}\n          options={uiSchema['ui:options']}\n          required={required}\n        />\n      )}\n      {fieldDescription && (\n        <DescriptionField\n          id={`${idSchema.$id}-description`}\n          description={fieldDescription}\n        />\n      )}\n      {properties.map((prop) => prop.content)}\n    </React.Fragment>\n  );\n}\n\nexport default ObjectFieldTemplate;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Button, Container, Sticky, Grid } from 'semantic-ui-react';\nimport $ from 'jquery';\nimport Form from '@rjsf/semantic-ui';\nimport TutorialMenu from './components/TutorialMenu';\nimport ArrayTemplate from './components/ArrayFieldTemplate';\nimport ObjectTemplate from './components/ObjectFieldTemplate';\nimport './App.css';\n\nfunction App() {\n  const [schema, setSchema] = useState({});\n  const [uiSchema, setUISchema] = useState({});\n  const [tutorialData, setTutorialData] = useState({});\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/tutorial-schema.json`)\n      .then((res) => res.json())\n      .then((data) => {\n        setSchema(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/ui-schema.json`)\n      .then((res) => res.json())\n      .then((data) => {\n        setUISchema(data);\n      });\n  }, []);\n\n  const downloadFormData = ({ formData }) => {\n    const dataStr = `data:text/json;charset=utf-8, ${encodeURIComponent(\n      JSON.stringify(formData, 0, 2),\n    )}`;\n    const download = document.createElement('a');\n    download.setAttribute('href', dataStr);\n    download.setAttribute('download', 'form-data.json');\n    document.body.appendChild(download);\n    download.click();\n    download.remove();\n  };\n\n  const onFileChange = ({ target: { files } }) => {\n    if (files.length === 0) {\n      return;\n    }\n\n    const file = files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const json = JSON.parse(event.target.result);\n      setTutorialData(json);\n    };\n    reader.readAsText(file);\n  };\n\n  const onClickUpload = () => {\n    $('input[type=file]').click();\n  };\n\n  const onClickDownload = () => {\n    $('Form button[type=submit]').click();\n  };\n\n  const onFormChange = ({ formData }) => {\n    setTutorialData(formData);\n  };\n\n  const contextRef = useRef();\n\n  return (\n    <Container>\n      <Grid columns=\"2\">\n        <Grid.Row>\n          <Grid.Column width=\"12\">\n            <Container className=\"tutorial_container\">\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={onFileChange}\n                style={{ display: 'none' }}\n              />\n              <Form\n                schema={schema}\n                uiSchema={uiSchema}\n                formData={tutorialData}\n                onSubmit={downloadFormData}\n                onChange={onFormChange}\n                ObjectFieldTemplate={ObjectTemplate}\n                ArrayFieldTemplate={ArrayTemplate}\n              />\n            </Container>\n          </Grid.Column>\n          <Grid.Column width=\"4\">\n            <Sticky className=\"main-buttons_wrapper\" context={contextRef}>\n              <Button.Group className=\"main-buttons\">\n                <Button onClick={onClickUpload}>\n                  <i className=\"upload icon\" />\n                  Upload\n                </Button>\n                <Button.Or />\n                <Button positive onClick={onClickDownload}>\n                  <i className=\"download icon\" />\n                  Download\n                </Button>\n              </Button.Group>\n            </Sticky>\n            <TutorialMenu tutorial={tutorialData} contextRef={contextRef} />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}